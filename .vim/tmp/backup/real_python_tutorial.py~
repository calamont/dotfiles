"""Bokeh Visualization Template

This template is a general outline for turning your data into a 
visualization using Bokeh.
"""
# Data handling
import pandas as pd
import numpy as np
from sklearn.datasets import make_blobs

# Bokeh libraries
from bokeh.io import output_file, output_notebook
from bokeh.plotting import figure, show
from bokeh.models import ColumnDataSource, Circle, HoverTool
from bokeh.layouts import row, column, gridplot
from bokeh.models.widgets import Tabs, Panel

# Prepare the data
X, labels = make_blobs(100, n_features=2, random_state=1)
df = pd.DataFrame(dict(x=X[:,0], y=X[:,1], label=labels))

# Determine where the visualization will be rendered
output_file('blobs.html')  # Render to static HTML, or 
# output_notebook()  # Render inline in a Jupyter Notebook

# Set up the figure(s)
fig = figure(title='Embedding Projector', tools="tap")  # Instantiate a figure() object
fig.outline_line_color = "black"
fig.axis.axis_line_width = 0
fig.axis.major_label_text_color = None
# fig.axis.minor_label_text_color = None
fig.axis.major_tick_line_color = None
fig.axis.minor_tick_line_color = None
fig.grid.grid_line_color = None

# Connect to and draw the data
cr = fig.circle(x=X[:,0], y=X[:,1],
           color='black', size=10, alpha=0.5,
           # set visual properties for selected glyphs
           selection_color="firebrick",
           # set visual properties for non-selected glyphs
           nonselection_fill_alpha=0.2,
           nonselection_fill_color="blue",
           nonselection_line_color="firebrick",
           nonselection_line_alpha=1.0,
           hover_fill_color="firebrick",
           hover_line_color="white")
fig.add_tools(HoverTool(tooltips=None, renderers=[cr]))
# Organize the layout

# Preview and save 
show(fig)  # See what I made, and save if I like it

