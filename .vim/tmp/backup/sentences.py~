from tqdm import tqdm
from eldar import build_query
from nltk.tokenize import sent_tokenize

from summarisation import _extract_summaries


def extract_sentences(data, eldar=False, query=""):
    """Extract sentencs from the reviews. These can be filtered using keywords
    queries if desired."""

    if not eldar:
        idxs = []
        sentences = []
        for i, review in enumerate(data.text):
            sents = sent_tokenize(review)
            for sent in sents:
                if any(
                    word.strip().lower() in sent.lower() for word in query.split(",")
                ):
                    sentences.append(sent)
                    idxs.append(i)
        data = data.iloc[idxs].copy()
        data["extraction"] = sentences
    else:
        idxs = []
        sentences = []
        cleaned_query = (
            query.replace("*", "")
            .replace("|", "OR")
            .replace("+", "AND")
            .replace("-", "AND NOT")
        )
        keyword_query = build_query(cleaned_query)
        for i, review in enumerate(data.text):
            sents = sent_tokenize(review)
            for sent in sents:
                match = keyword_query.filter([sent])
                if len(match) > 0:
                    sentences.append(sent)
                    idxs.append(i)
        data = data.iloc[idxs].copy()
        data["extraction"] = sentences
    # Drop modified text if it is repeated in the same review
    return data
